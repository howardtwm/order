import os

def search_files(directory, keyword):
    results = []

    for root, _, files in os.walk(directory):
        for file in files:
            if keyword in file:
                results.append(os.path.join(root, file))

    return results

print("文件搜索工具命令行应用程序")

while True:
    print("\n请选择操作：")
    print("1. 搜索文件")
    print("2. 退出程序")

    choice = input("请选择操作（输入数字）：")

    if choice == '2':
        print("谢谢使用，再见！")
        break

    if choice == '1':
        directory = input("请输入目录路径：")
        keyword = input("请输入关键字：")
        results = search_files(directory, keyword)

        if results:
            print("搜索结果：")
            for file in results:
                print(file)
        else:
            print("未找到匹配的文件。")
    else:
        print("无效的选择，请重新输入。")

//以上代码是一个简单的文件搜索工具命令行应用程序。用户可以选择搜索文件，并提供要搜索的目录路径和关键字。

//search_files() 函数使用 os.walk() 函数遍历指定目录下的所有文件和文件夹。对于每个文件，如果文件名中包含关键字，就将文件的完整路径添加到结果列表中。最后，返回结果列表。

//应用程序使用一个无限循环来等待用户输入操作和相应的信息，并根据用户选择执行相应的操作。用户可以选择退出程序来结束应用程序的运行。

//请注意，这只是一个简单的示例，基于文件名进行简单的搜索。在实际项目中，您可能需要考虑更复杂的搜索逻辑和更多的搜索选项，以实现一个更强大和灵活的文件搜索工具。
